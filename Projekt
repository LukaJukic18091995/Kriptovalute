import json
#grafovi
import plotly.graph_objects as go
import matplotlib.pyplot as plt
import blockcypher
from blockcypher import get_transaction_details
import requests
import nomics
from nomics import Nomics
import pandas as pd
from datetime import datetime
from pycoingecko import CoinGeckoAPI
from bitcoinrpc.authproxy import AuthServiceProxy, JSONRPCException

def main():
    
    cg = CoinGeckoAPI()
    cvor = "x"
    port = "x"
    user = "x"
    password = "x"
    link = "http://" + user + ":" + password + "@" + cvor + ":" + port
    x = AuthServiceProxy(link)
    
    #zadnji dodani blok u bchain-u tj. HASH
    blok = x.getbestblockhash()
    #json s detaljima o bloku kojeg smo proslijedili
    blok_detalji = x.getblock(blok, 1)
    print("Visina bloka: ", blok_detalji['height'])
    print("Broj potvrda: ", blok_detalji['confirmations'])
    print("Veličina bloka: ", blok_detalji['size'], "bytes")
    print("Broj transakcija: ", blok_detalji['nTx'])
    print("Hash prijašnjeg bloka: ", blok_detalji['previousblockhash'])
    
    print("\n")
    blok_transakcije_info = x.getblockstats(blok)
    print("Prosječna vrijednost transakcija u bloku: ", blok_transakcije_info['avgfee']*0.00000001,"BTC")
    print("Sveukupna količina Bitcoina poslana u bloku: ", blok_transakcije_info['total_out']*0.00000001,"BTC")
    print("Nagrada za rudarenje bloka :", blok_transakcije_info['subsidy']*0.00000001,"BTC")
    
    print("\n")
    blockchain = x.getblockchaininfo()
    print("Naziv: ",blockchain['chain'])
    print("Broj blokova: ",blockchain['blocks'])
    print("Težina: ",blockchain['difficulty'])
    print("Veličina: ",blockchain['size_on_disk'], "bytes")
    
    print("\n")
    mempool = x.getmempoolinfo()
    print("Broj transkacija u mempoolu: ", mempool['size'])
    print("Korištena memorija: ", mempool['usage'], "bytes")
    print("Minimalna naplata za transakcije: ", mempool['mempoolminfee'],"BTC/kb")
    
    print("\n")
    #Dodali smo node
    #x.addnode(cvor, 'add')
    cvor_detalji = x.getaddednodeinfo(cvor)
    print("Dodano je: ", cvor_detalji[0]['addednode'])
    print("Jesmo li spojeni?", cvor_detalji[0]['connected'])
    print("Broj spajanja s drugim čvorovima: ", x.getconnectioncount())
    #Brisanje
    #x.disconnectnode(cvor)
    
    print("\n")

    #p = cg.get_price(ids = 'bitcoin', vs_currencies = 'usd')
    r = cg.get_coin_by_id(id = 'bitcoin')
    market_data = r.get('market_data')
                
    print("Za vrijednost Bitcoina u valutama upišite 1")
    print("Za promjenu cijene u intervalu od 24h upišite 2")
    print("Za promjenu cijene u intervalu od 7 dana upišite 3")
    print("Za promjenu cijene u intervalu od 30 dana upišite 4")
    print("Za promjenu cijene u intervalu od jedne godine upišite 5")
    print("Ukoliko želite prekinuti, upišite 0")
    choice = input()
    if choice == '1':
        #vrijednosti u valutama
        current_worth_in_value = market_data.get('current_price')
        print("Američki dolar: ", current_worth_in_value['usd'],"$")
        print("Australski dolar: ", current_worth_in_value['aud'],"$")
        print("Kanadski dolar: ", current_worth_in_value['cad'],"$")
        print("Kineski yuan: ", current_worth_in_value['cny'],"¥\n")
                
    if choice == '2':
        #promjene cijene u intervalima
        change_in_24h = market_data.get('price_change_percentage_24h')
        print("Promjena vrijednosti Bitcoina u zadnja 24 sata je: ", change_in_24h,"%\n")
        
    if choice == '3':
                
        change_in_7d = market_data.get('price_change_percentage_7d')
        print("Promjena vrijednosti Bitcoina u zadnjih 7 dana je: ", change_in_7d,"%\n")
        
    if choice == '4':
              
        change_in_30d = market_data.get('price_change_percentage_30d')
        print("Promjena vrijednosti Bitcoina u zadnjih mjesec dana je: ", change_in_30d,"%\n")
        
    if choice == '5':
        
        change_in_1y = market_data.get('price_change_percentage_1y')
        print("Promjena vrijednosti Bitcoina u zadnjih godinu dana je: ", change_in_1y,"%\n")

    
    nomics = Nomics("3a2ffe21b293b07c8f9bf7d9acde7984")
    
    print("Ukoliko želite pogledati povijesni prikaz cijena Bitcoina, upišite 1, ako ne upišite 0")
    zz = input()
    if zz > '0':
        print("Unesi datum početka u obliku YYYY-MM-DDTHH:MM:SSZ")
        datum_pocetka = input()
        print("Unesi datum kraja u obliku YYYY-MM-DDTHH:MM:SSZ")
        datum_kraja = input()
        datum_pocetka = str(datum_pocetka)
        datum_kraja = str(datum_kraja)
                
        lista_vrijednosti_povijest = nomics.ExchangeRates.get_history(
        currency = "BTC", 
        start = datum_pocetka,
        end = datum_kraja
        )
        for y in range(0, len(lista_vrijednosti_povijest)):
            print("Datum :",lista_vrijednosti_povijest[y]['timestamp']," Cijena: ", lista_vrijednosti_povijest[y]['rate'],"$")
        print("\n")


    #d = cg.get_coin_market_chart_range_by_id(id = 'bitcoin', vs_currency = 'ethereum', from_timestamp = '2019-01-01', to_timestamp = '2019-01-02')
    #print(d)
    
    print("Za pogled na open, high, low i closing cijene bitcoina u intervalu vremena, upišite broj dana koji želite pregledati, 0 za preskočiti")
    broj_dana = input()
    if broj_dana != '0':
        list_open_high_low_closing = cg.get_coin_ohlc_by_id('bitcoin', 'usd', broj_dana)
    
        #graf za razlike u cijenama kroz vrijeme
        list_open = []
        list_high = []
        list_low = []
        list_closing = []
        
        for x in list_open_high_low_closing:
            list_open.append(x[1])
            list_high.append(x[2])
            list_low.append(x[3])
            list_closing.append(x[4])
            
        plt.plot(list_open, label = "OPEN")
        plt.plot(list_high, label = "HIGH")
        plt.plot(list_low, label = "LOW")
        plt.plot(list_closing, label = "CLOSING")
        plt.show()


if __name__=="__main__":
    main()
